default_username='jstackhouse'

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM=xterm-256color
fi

set_prompts() {
  local black="" blue="" bold="" cyan="" green="" orange="" \
        purple="" red="" reset="" white="" yellow=""

  if [ -x /usr/bin/tput ] && tput setaf 1 &> /dev/null; then
    tput sgr0 # Reset colors

    bold=$(tput bold)
    reset=$(tput sgr0)

    black=$(tput setaf 0)
    blue=$(tput setaf 33)
    cyan=$(tput setaf 37)
    green=$(tput setaf 190)
    orange=$(tput setaf 172)
    purple=$(tput setaf 141)
    red=$(tput setaf 124)
    violet=$(tput setaf 61)
    magenta=$(tput setaf 9)
    white=$(tput setaf 8)
    yellow=$(tput setaf 136)
  fi

  # Only show username/host if not default_username
  function usernamehost() {
    # Highlight the user name when logged in as root.
    if [[ "${USER}" == *"root" ]]; then
      userStyle="${red}";
    else
      userStyle="${magenta}";
    fi

    userhost=""
    userhost+="\[${userStyle}\]$USER "
    userhost+="${white}at "
    userhost+="${orange}$HOSTNAME "
    userhost+="${white}in"

    if [ $USER != "$default_username" ]; then
      echo $userhost "";
    fi;
  }

  function prompt_git() {
    # check if we're in a git repo
    git rev-parse --is-inside-work-tree &>/dev/null || return

    # quickest check for what branch we're on
    branch=`git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'`

    # check if it is dirty
    dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ]&& echo -e "*")

    [ -n "$s" ] && s=" [$s]"
    printf " %s" "$1$branch$2$dirty"

    return
  }


  # ------------------------------------------------------------------
  # | Prompt string                                                  |
  # ------------------------------------------------------------------
  PS1="\[\033]0;\w\007\]"                                 # terminal title (set to the current working directory)
  PS1+="\[$bold\]"
  PS1+="\[$(usernamehost)\]"                              # username at host
  PS1+="\[$green\]\w"                                     # working directory 
  PS1+="\$(prompt_git \"$purple\" \"$cyan\")"   # git repository details
  PS1+="\n"
  PS1+="\[$reset$white\]\\$ \[$reset\]"
  export PS1

  # ------------------------------------------------------------------
  # | Subshell prompt string                                         |
  # ------------------------------------------------------------------

  PS2="âš¡ "
  export PS2

  PS4="+$( tput cr && tput cuf 6 && printf "%s $reset" )"
  export PS4

}

set_prompts
unset set_prompts
